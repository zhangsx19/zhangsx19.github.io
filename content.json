{"pages":[],"posts":[{"title":"如何个性化个人博客","text":"前言搭建完博客后，可以定制个人的博客风格。本文将基于Icarus主题搭建赛博朋克风格的博客。 一、技术选型二、搭建步骤1.安装和配置必要依赖yarn安装直接使用npm命令即可，这样的前提是你已经安装了 Node.js 12node-v #检查是否具有node.jsnpm install -g yarn #安装yarn 安装完成之后可以通过yarn -v命令检测是否安装成功。然后我们设置一下yarn库的镜像源： 1yarn config set npmRegistryServer https://registry.npm.taobao.org 2.更换为 Icarus 主题我们查看 Icarus 文档,里面有英文文档也有中文文档。更换主题主要有两种方式，一种是使用 npm 安装主题的方式，另一种是下载源码放到 theme 文件夹的方式。简单起见，我们采用 npm 的方式： 1yarn add hexo-theme-icarus 使用 hexo 命令修改主题为 Icarus: 1npx hexo config theme icarus hexo g生成后，本地调试下，报错： 提示缺少依赖，就按照指示按照依赖： 1yarn add bulma-stylus@0.8.0 hexo-pagination@^2.0.0 hexo-renderer-inferno@^0.1.3 再次生成并本地调试，成功出现 Icarus 主题要更换为赛博朋克风格主题，只需在Hexo文件夹的_config.icarus.yml修改 12# Icarus theme variant, can be &quot;default&quot; or &quot;cyberpunk&quot;variant: cyberpunk 再次生成并本地调试，成功出现赛博朋克主题，用hexo d上传至服务器 3.自定义配置参考资料 Yarn 的安装与使用 轻松搭建赛博朋克风格个人博客 —— Hexo 篇｜技术点评","link":"/2022/04/08/%E5%A6%82%E4%BD%95%E4%B8%AA%E6%80%A7%E5%8C%96%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"title":"信号与系统学习笔记（一）","text":"一、LTI系统时域分析 LTI系统定义:$$T(\\sum_{k=k_1}^{k_2} a_kx_k(t-t_k))= \\sum_{k=k_1}^{k_2} a_ky_k(t-t_k)$$ 卷积：设某系统冲激响应为$h(t)$,即$\\delta(t)\\Rightarrow h(t)$ $f(t)*T(\\delta(t))=T(f(t))$，看作f(t)经过了系统h(t),系统冲激响应为$T(\\delta(t))$。$u(t)$为$\\delta(t)$经过积分器 因果性：系统输出只与输入的当前值和以前值有关，充要条件$$h(t)=h(t)u(t)$$$$y(t)=\\int_0^\\infty h(\\tau)x(t-\\tau)d\\tau$$因$\\tau&gt;0$，所以$x(t-\\tau)$只用到了x(t)之前的值 记忆系统：输出与输入过去值有关 $x_1(t)=cosw_0t,x_2(t)=e^{-t},y_1(t)=x’(t),y_2(t)=x^2(t)$ 流图表示：子系统对调 二、LTI特征分析 CNN : $x[n]*h[-n]$,边缘补零，计算反向传播时可用卷积的思想 矩阵特征值与特征向量：$$A\\vec{x}=λ\\vec{x}$$把A看作某种对x的几何变换，若A对x有作用不变性，则x为A的特征向量，对应系数为特征值。 系统特征值与特征函数：$$T(s(u))=λs(u)$$s(u)/T可看作无穷维向量/矩阵 LTI系统特征值与特征函数：$$y(t)=e^{jwt}\\int_{-\\infty}^{\\infty} h(\\tau)e^{-jw\\tau}d\\tau=e^{jwt}H(w)$$$s(t)=e^{jwt}是任意LTI系统的特征函数，H(w)为对应系统的特征值$ 复指数表示$e^{jwt}$是真正的单频率信号，而cos和sin在频谱上都有两条谱线，所以只有傅里叶变换才能用于信号成分分析，才有明确的物理意义,是无可替代的。 $e^{st}$是一般意义的LTI特征函数，s=a+jw可表示任何复数，而傅里叶的s只能表示纯虚数(系数不同)，H(s)为特征值。是更复杂的信号，但不是有确定物理意义的单频信号，所以Laplace变换在做系统变换时比傅里叶变换有更广泛的性质，但不能用于信号成分分析。 三、傅里叶级数 $L^2[t_0,t_a]$上的完备正交基：$$f(t)=\\sum_{n=-\\infty}^{\\infty} c_n\\varphi_n(t)$$$$&lt;f(t),\\varphi_k(t)&gt;=\\sum_{n=-\\infty}^{\\infty} c_n&lt;\\varphi(t),\\varphi_k(t)&gt;=c_k&lt;\\varphi_k(t),\\varphi_k(t)&gt;$$ 三角形式傅里叶级数正交基：$$\\frac{1}{\\sqrt{2}},coswt,sinwt,…,cosnwt,sinnwt$$$$&lt;\\varphi_k(t),\\varphi_k(t)&gt;=\\frac{T}{2}$$ 指数形式傅里叶级数正交基：{e^{jnwt}}$$&lt;\\phi_n(t),\\phi_n(t)&gt;=&lt;e^{jnwt},e^{jnwt}&gt;=T$$ 周期延拓 四、傅里叶变换 加窗 $Sa(\\frac{wT}{2})=\\frac{sin\\frac{wT}{2}}{\\frac{wT}{2}}$主瓣是$\\frac{2\\pi}{T}$ –第一个过零点 峰值点在$w_0$和$-w_0$位置，可用于谱分析 局限：有限长的窗带来的频率分辨率问题 如果$\\frac{2\\pi}{T}&lt;&lt;w_0$,即矩形里包含了$cosw_0t$的很多周期，$T\\rightarrow\\infty$时Sa趋向冲击，没问题。但主瓣有宽度，如果信号有两个正弦分量$w_0$和$w_1$，如果$w_0$和$w_1$的距离小于主瓣宽度，两个Sa的主瓣会重合，叠加成一个Sa,可能只在$w_0$和$w_1$中间出现一个峰值，这时就无法分辨出两个频率。 为了解决这个问题，要求窗长尽可能大，分辨率才好。 周期信号的傅里叶变换 周期信号本来是没有傅里叶变换的,($f(t)\\notin L^1(-\\infty,\\infty)$)。但可以通过主周期得到主周期的傅里叶变换，再得到F级数的系数与主周期的F变换的关系，从而得到完整周期的F变换。其傅里叶变换是一系列冲激串。 –F级数是F变换的特例 只有有限长信号或其延拓成的周期信号才有傅里叶级数，$F_n$表明在某个频点有确定的信号强度，信号强度的密度对应着冲激，即傅里叶变换。 高斯对高斯，冲激对冲激 五、离散信号傅里叶变换 离散信号的频率在离散信号中，w和$w+2\\pi k$不可区分，因为只看离散点n(整数)的值而非连续的t，如$sin((2\\pi k+w)n+\\phi)=sin(wn+\\phi)$。所以角频率主值取$[-\\pi,\\pi]$或$[0,2\\pi]$ 注意，在离散信号中，$\\pi$为最高频，0和$2\\pi$为最低频。(0和$2\\pi$不可区分) 正弦离散信号的周期$x[n]=cos(w_0n+\\phi)$,令$x[n+N]=x[n]$，则周期$N=\\frac{2\\pi}{w_0}k$,k取令N为整数的最小整数 注意：角频率越大，周期越小的结论不再成立 以N为周期的离散信号中，可区分的正弦频率数目只有N个 $$w_k=\\frac{2\\pi}{N}k,k=0,1,…,N-1$$ 离散信号的傅里叶级数DFS DTFT","link":"/2022/04/05/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"},{"title":"用HEXO从零开始搭建个人博客","text":"摘要：一篇如何使用Github Pages和Hexo搭建自己的个人博客的教程，里面介绍了如何使用和配置Hexo框架，如何将Hexo部署到自己的Github项目中，如何注册域名以及将自己的域名关联到Github Pages上。 前言一直想搭建一个属于自己的博客，一方面可以记录自己的学习成果和技术理解，一方面在面试中也是加分项。在此记录下首次搭建个人博客的踩坑之路。 一、技术选型1.为什么选择HEXO？博客生成技术分为静态和动态网站生成，考虑到静态相比动态生成，有如下优点： 1.内容存储为平面文件，因此不需要数据库 2.静态网站不需要动态服务器端处理 3.静态网站比动态网站超快，因为它们不需要服务器端处理或数据库访问 4.静态网站比任何动态网站都更安全，因为可以利用的安全漏洞更少 5.缓存静态文件比缓存动态页面更有效 所以本次使用静态生成，目前主流静态站点生成器有：Hexo和Hugo等，Hugo是一个用Go语言构建的静态站点生成器，其搭建较简单但可扩展性差。而Hexo是基于Node的开源静态生成器，有以下优点： 1.构建速度快 2.使用一个部署命令可部署到Github或其他任何主机 3.强大的Markdown支持 4.高度可扩展 5.丰富的开源主题与插件 基于此，本次采用Hexo进行博客搭建。 2.为什么选择Github-PagesGithub Pages是用户编写的、托管在github上的静态网页,优点有：1.可以绑定你的域名2.简单快捷，可以提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。 二、搭建步骤1.安装和配置必要框架Git安装去Git官网根据你的电脑参数，下载对应版本并安装。安装完成后在桌面或任意文件夹点击鼠标右键，会有Git GUI Here和Git Bash Here两个按钮，一个是图形界面的Git操作，一个是命令行。一般选择命令行操作Git Bash Here。 Node.js安装到官网根据电脑参数下载安装文件并执行，无脑点下一步即可，无需配置环境变量，完成安装。 Hexo安装与配置桌面右键鼠标，点击Git Bash Here，输入以下命令即可安装。 12npm install hexo-cli -g npm install hexo-deployer-git --save 第一句是安装hexo，第二句是安装hexo部署到git page的deployer，两个都需要安装。如下图即安装完成。 安装完成后，根据自己喜好创建一个Hexo文件夹(如D:\\Blog\\Hexo),进入创建的文件夹目录，右键鼠标，点击Git Bash Here，执行命令: 1hexo init Hexo 将在指定文件夹中新建所需要的初始化配置文件，如下图 123hexo clean #清理缓存hexo generate #进行渲染 简写为 hexo ghexo server #部署到本地(调试使用) 简写为 hexo s 终端中会出现INFO Hexo is running at http://localhost:4000/。此时在浏览器输入网址http://localhost:4000，即可查看本地的效果，如下图 此时个人博客初步创建成功，但这是本地调试用的，其他人看不到(调试完毕后记得在git命令行中Ctrl+C来停止运行，不然下次就进不去了)，所以接下来我们需要把它部署到服务器上，从而让每个人都能通过互联网访问到我们的个人博客。 2.将博客部署到Github-Pages上在Github中创建github.io项目代码库注意repository的名字必须是：你的用户名.github.io 将本地的Hexo文件更新到Github的库中打开创建的Hexo文件夹，修改配置文件_config.yml以后的大部分操作都会在_config.yml中进行，它是站点的配置文件。在Hexo文件夹下,右键鼠标，点击Git Bash Here,执行命令： 1234hexo clean #清理缓存hexo generate #进行渲染 简写为 hexo ghexo server #部署到本地 简写为 hexo s 可省略hexo deploy #部署到git服务器 简写为 hexo d 以上代码为了简单后续统称为“更新代码”，即每次在本地进行了操作（如修改了配置、新写或修改了博客文章等),都需执行“更新代码”来同步到git服务器，从而让别人浏览到。其中hexo s命令也可省略，即如果没有本地调试需求，可以直接commit到git服务器。如报错ERROR Deployer not found: git,deployer没有安装成功，需要执行如下命令再安装一次： 1npm install hexo-deployer-git --save 再执行hexo g -d，出现INFO Deploy done: git即部署成功，在浏览器上输入Github Pager为我们生成的外链：你的用户名.github.io（如zhangsx19.github.io），即可看到自己的博客，且每个人都可通过此地址访问到。 三、写第一个博客搭好博客后，进入创建的Hexo文件夹，使用如下命令来新建文章： 1hexo new post “文章名字” #简写为 hexo n &quot;文章名字&quot; 建立好的文章存储在./source/_posts 中，你可以在本地用markdown语法编辑内容。编辑完成后还需要执行“更新代码” 123hexo cleanhexo ghexo d #可与hexo g合并为 hexo d -g 再刷新浏览器就可看到新文章。如下图: 四、将域名关联到Github Pages(可选）1.域名购买如果不想用github提供的免费域名，可以选择在阿里云上买一个属于自己的域名，然后将自己域名绑定到自己的Github Pages博客上 2.域名解析购买域名并实名认证后，需要把域名解析到我们的博客中，在阿里云的域名控制台找到域名右侧对应的解析按钮。点击添加解析，然后按照如下填写添加解析，记得把记录值替换成你自己的博客地址。 之后记得启用该记录。 3.博客配置购买域名后，在Hexo\\source 文件夹下创建文件 CNAME （通过记事本创建和打开，没有后缀名），内容为你的域名，如sx-zhang.top。 然后在Hexo文件夹执行“更新代码”。 12hexo cleanhexo g -d 就可以通过购买的域名访问博客了。如果不能访问可能是因为运营商DNS缓存问题。等几分钟就可以。 五、实现https协议(可选）购买的域名是http协议，如果用google浏览器或者Safari，会提示网站不被信任，只有你点击仍要继续才会展示你的博客。而使用https协议就不会有这个问题，有以下方法： 购买证书 使用免费CA证书。腾讯云阿里云都有提供。不过有时间限制 使用CDN进行反向代理 因为我们使用的github Page是不支持上传证书的，所以此次使用第三种:通过CDN配置反向代理。 原理Cloudflare 提供DNS解析服务，而且速度很快。它提供了免费的https服务(但不是应用SSL证书)。实现模式是，用户到CDN服务器的连接为https，而CDN服务器到GithubPage服务器的连接为http，即在CDN服务器那里加上反向代理。 步骤去官网注册后添加购买的域名，进入DNS解析界面填入如下解析： 其中前两个是使你的域名指向github的服务器地址(github文档中给的)，最后CNAME记录指向的是github仓库域名username.github.io。一定要严格按照这个来配置。记录下cloudflare给你的DNS解析服务器，就在上一步那个页面下边，用这个记录去把阿里云的DNS解析服务器替换掉，同时删掉阿里云里面的DNS解析记录，因为只靠clouleflare来解析DNS。 回到clouldflare上面选择SSL/TLS的Overview选项，然后选择Full或者是Flexible。再在Edge Certificates里打开always use HTTPS开关。此时即可用https访问个人博客啦！ 坑点：博文不能有非https的链接，比如图片图床不能是https的，或者评论插件不支持https等 总结本文简单介绍了如何用Hexo框架从零开始搭建属于自己的个人博客，以及如何把购买的域名关联到Github Pages,并利用CDN配置反向代理实现https协议。搭建完博客后，接下来就是要个性化个人博客和学习Markdown来写博客了。 想了解更多，欢迎来参观我的博客：Zhangsx’s Blog 和github：zhangsx19 参考资料 hexo搭建博客以及域名解析分析 2018，你该搭建自己的博客了！ 关于HEXO搭建个人博客的点点滴滴","link":"/2022/04/04/%E7%94%A8HEXO%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"Vite","slug":"Vite","link":"/tags/Vite/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"},{"name":"Translation","slug":"Translation","link":"/tags/Translation/"}],"categories":[{"name":"Front-End","slug":"Front-End","link":"/categories/Front-End/"},{"name":"Tools","slug":"Front-End/Tools","link":"/categories/Front-End/Tools/"}]}